{"ast":null,"code":"var _jsxFileName = \"/Users/ponny/Desktop/classmate-master/front-end/src/Components/MainPage/RoomPopUpPage/StepperPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Stepper from \"@mui/material/Stepper\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Step from \"@mui/material/Step\";\nimport Button from \"@mui/material/Button\";\nimport NameClassPage from \"./NameClassPage\";\nimport AddSubjectMainPage from \"./AddSubjectMainPage\";\nimport NameBestMatePage from \"./NameBestMatePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [\"Name your class\", \"Fill your class subjects\", \"Select your Bestmate!\"];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(NameClassPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 8\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(AddSubjectMainPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(NameBestMatePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return \"Default\";\n  }\n}\n\nexport default function StepperPage(props) {\n  _s();\n\n  const {\n    setOpenPopUp\n  } = props;\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(previousActiveStep => previousActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(previousActiveStep => previousActiveStep - 1);\n  };\n\n  const isLastStep = () => {\n    return activeStep === 2;\n  };\n\n  const isFirstStep = () => {\n    return activeStep === 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), getStepContent(activeStep), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isFirstStep() ? /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stepper_button_left\",\n      onClick: () => handleBack(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), isLastStep() ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stepper_button\",\n      onClick: () => setOpenPopUp(false),\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stepper_button\",\n      onClick: () => handleNext(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StepperPage, \"cJXWosTT0XUh3gGn3cCcv/Y+Hws=\");\n\n_c = StepperPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepperPage\");","map":{"version":3,"sources":["/Users/ponny/Desktop/classmate-master/front-end/src/Components/MainPage/RoomPopUpPage/StepperPage.js"],"names":["React","Stepper","StepLabel","Step","Button","NameClassPage","AddSubjectMainPage","NameBestMatePage","steps","getStepContent","step","StepperPage","props","setOpenPopUp","activeStep","setActiveStep","useState","handleNext","previousActiveStep","handleBack","isLastStep","isFirstStep","map","label","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,KAAK,GAAG,CACZ,iBADY,EAEZ,0BAFY,EAGZ,uBAHY,CAAd;;AAOA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,UAAQA,IAAR;AACE,SAAK,CAAL;AACE,0BACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADD;;AAGF,SAAK,CAAL;AACE,0BAAO,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,CAAL;AACE,0BAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,aAAO,SAAP;AAVJ;AAYD;;AAED,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAACC,IAAAA;AAAD,MAAiBD,KAAvB;AAEA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8Bf,KAAK,CAACgB,QAAN,CAAe,CAAf,CAApC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,aAAa,CAAEG,kBAAD,IAAwBA,kBAAkB,GAAG,CAA9C,CAAb;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBJ,IAAAA,aAAa,CAAEG,kBAAD,IAAwBA,kBAAkB,GAAG,CAA9C,CAAb;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACvB,WAAON,UAAU,KAAK,CAAtB;AACD,GAFD;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACxB,WAAOP,UAAU,KAAK,CAAtB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEA,UAArB;AAAA,gBACGN,KAAK,CAACc,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,kBACT,QAAC,IAAD;AAAA,+BACE,QAAC,SAAD;AAAA,oBAAYD;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,SAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAQGd,cAAc,CAACK,UAAD,CARjB,eASE;AAAA;AAAA;AAAA;AAAA,YATF,EAUGO,WAAW,kBACV;AAAA;AAAA;AAAA;AAAA,YADU,gBAGV,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAE,MAAMF,UAAU,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,EAeGC,UAAU,kBACT,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAI,MACtCP,YAAY,CAAC,KAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAKT,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,MAAMI,UAAU,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA9CuBN,W;;KAAAA,W","sourcesContent":["import React from \"react\";\nimport Stepper from \"@mui/material/Stepper\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Step from \"@mui/material/Step\";\nimport Button from \"@mui/material/Button\";\nimport NameClassPage from \"./NameClassPage\";\nimport AddSubjectMainPage from \"./AddSubjectMainPage\";\nimport NameBestMatePage from \"./NameBestMatePage\";\n\nconst steps = [\n  \"Name your class\",\n  \"Fill your class subjects\",\n  \"Select your Bestmate!\",\n];\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return (\n       <NameClassPage/>\n      );\n    case 1:\n      return <AddSubjectMainPage/>\n    case 2:\n      return <NameBestMatePage/>;\n    default:\n      return \"Default\";\n  }\n}\n\nexport default function StepperPage(props) {\n  const {setOpenPopUp} = props\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep((previousActiveStep) => previousActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((previousActiveStep) => previousActiveStep - 1);\n  };\n\n  const isLastStep = () => {\n    return activeStep === 2;\n  };\n\n  const isFirstStep = () => {\n    return activeStep === 0;\n  };\n\n  return (\n    <div>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      {getStepContent(activeStep)}\n      <br />\n      {isFirstStep() ? (\n        <span></span>\n      ) : (\n        <Button className=\"stepper_button_left\" onClick={() => handleBack()}>Back</Button>\n      )}\n      {isLastStep() ? (\n        <Button className=\"stepper_button\" onClick = {() => \n                setOpenPopUp(false)\n                }>Finish</Button>\n      ) : (\n        <Button className=\"stepper_button\" onClick={() => handleNext()}>Next</Button>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}