{"ast":null,"code":"var _jsxFileName = \"/Users/ponny/Desktop/classmate-master/front-end/src/Components/LoginPage/Register.js\",\n    _s = $RefreshSig$();\n\nimport Grid from \"@mui/material/Grid\";\nimport Logo from \"../imgs/full-logo.png\";\nimport Box from \"@mui/material/Box\";\nimport * as React from 'react';\nimport \"./LoginPage.css\";\nimport theme from \"../ui/Theme\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Typography, FormLabel } from \"@mui/material\";\nimport MuiAlert from '@mui/material/Alert';\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from '@mui/material/Alert';\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [usrname, setUsrname] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [pic, setPic] = useState();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      ref: ref,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  });\n\n  const handleBack = () => {\n    navigate(\"/\");\n  };\n\n  const onSignUp = async () => {\n    setLoading(true);\n\n    if (!name || !email || !password || !confirmPassword) {\n      console.log(\"please fill all blanks\");\n      setLoading(false);\n      return;\n    }\n\n    if (password != confirmPassword) {\n      console.log(\"password must match\");\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/user\", {\n        name,\n        email,\n        password,\n        pic\n      }, config);\n      console.log(\"login success\");\n      localStorage;\n    } catch (err) {\n      setLoading(false);\n    }\n\n    handleBack();\n  };\n\n  const postDetails = async pics => {\n    setLoading(true);\n\n    if (pics === undefined) {\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        variant: \"outlined\",\n        severity: \"error\",\n        children: \"This is an error alert \\u2014 check it out!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"Classmate\");\n      data.append(\"cloud_name\", \"dp1xewsqt\");\n      fetch(\"http://api.cloudinary.com/v1_1/dp1xewsqt/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setPic(data.url.toString());\n        console.log(data.url.toString());\n        setLoading(false);\n      }).catch(err => {\n        console.log(err);\n        setLoading(false);\n      });\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        variant: \"outlined\",\n        severity: \"error\",\n        children: \"This is an error alert \\u2014 check it out!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      class: \"background-login\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: \"center\",\n                marginTop: \"5rem\",\n                backgroundColor: \"secondary.main\",\n                padding: \"20px\",\n                position: \"relative\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"logo\",\n                src: Logo,\n                alt: \"brand logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  class: \"login-text\",\n                  type: \"text\",\n                  placeholder: \"Your Name\",\n                  onChange: e => {\n                    setName(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  class: \"login-text\",\n                  type: \"text\",\n                  placeholder: \"Email\",\n                  onChange: e => {\n                    setEmail(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  class: \"login-text\",\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  onChange: e => {\n                    setPassword(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  class: \"login-text\",\n                  type: \"password\",\n                  placeholder: \"Confirm password\",\n                  onChange: e => {\n                    setConfirmPassword(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: e => postDetails(e.target.files[0])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"login-btn\",\n                  onClick: onSignUp,\n                  isLoading: loading,\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"back_button\",\n                onClick: handleBack,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"primary.main\",\n                  children: \" < Back \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 69\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Register, \"6kLaawVMegV5OD1Vx9yU5PRvot4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/ponny/Desktop/classmate-master/front-end/src/Components/LoginPage/Register.js"],"names":["Grid","Logo","Box","React","theme","ThemeProvider","Typography","FormLabel","MuiAlert","useNavigate","Alert","useState","axios","Register","email","setEmail","name","setName","usrname","setUsrname","password","setPassword","confirmPassword","setConfirmPassword","pic","setPic","loading","setLoading","navigate","forwardRef","props","ref","handleBack","onSignUp","console","log","config","headers","data","post","localStorage","err","postDetails","pics","undefined","type","FormData","append","fetch","method","body","then","res","json","url","toString","catch","textAlign","marginTop","backgroundColor","padding","position","e","target","value","files"],"mappings":"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","sourcesContent":["import Grid from \"@mui/material/Grid\";\nimport Logo from \"../imgs/full-logo.png\";\nimport Box from \"@mui/material/Box\";\n\n\nimport * as React from 'react';\nimport \"./LoginPage.css\";\nimport theme from \"../ui/Theme\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Typography, FormLabel } from \"@mui/material\";\nimport MuiAlert from '@mui/material/Alert';\nimport {useNavigate} from \"react-router-dom\";\nimport Alert from '@mui/material/Alert';\nimport {useState} from \"react\";\nimport axios from \"axios\"\n\nexport default function Register() {\n\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [usrname, setUsrname] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [pic,setPic] = useState();\n    const [loading,setLoading] = useState(false)\n\n    const navigate = useNavigate();\n\n    const Alert = React.forwardRef(function Alert(props, ref) {\n      return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n    });\n  \n    const handleBack = () =>{ \n      navigate(\"/\");\n    }\n\n    const onSignUp = async () => {\n      setLoading(true)\n      if(!name || !email || !password || !confirmPassword){\n        console.log(\"please fill all blanks\")\n        setLoading(false)\n        return\n      }\n      if(password != confirmPassword){\n        console.log(\"password must match\")\n        return\n      }\n\n      try{\n        const config ={\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        }\n        const {data} = await axios.post(\"/api/user\",{name,email,password,pic},config)\n        console.log(\"login success\")\n        localStorage\n      }catch(err){\n        setLoading(false)\n      }\n\n      handleBack()\n    }\n\n\n    const postDetails = async (pics) =>{\n      setLoading(true)\n      if(pics === undefined){\n        <Alert variant=\"outlined\" severity=\"error\">\n          This is an error alert — check it out!</Alert>\n          return\n      }\n      if(pics.type === \"image/jpeg\" || \"image/png\"){\n        const data = new FormData()\n        data.append(\"file\", pics)\n        data.append(\"upload_preset\", \"Classmate\")\n        data.append(\"cloud_name\", \"dp1xewsqt\")\n        fetch(\"http://api.cloudinary.com/v1_1/dp1xewsqt/image/upload\", {\n          method:\"post\",\n          body: data,\n        })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString())\n          console.log(data.url.toString())\n          setLoading(false)\n        })\n        .catch((err) => {\n          console.log(err)\n          setLoading(false)\n        })\n      } else{\n        <Alert variant=\"outlined\" severity=\"error\">\n        This is an error alert — check it out!</Alert>\n      }\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Box class=\"background-login\">\n          <Grid container>\n            <Grid xs={4}></Grid>\n            <Grid xs={4}>\n              <Typography variant=\"h4\">\n                <Box\n                  sx={{\n                    textAlign: \"center\",\n                    marginTop: \"5rem\",\n                    backgroundColor: \"secondary.main\",\n                    padding: \"20px\",\n                    position: \"relative\"\n                  }}\n                >\n                  <img class=\"logo\" src={Logo} alt=\"brand logo\" />\n                  <div>\n                  <input\n                      class=\"login-text\"\n                      type=\"text\"\n                      placeholder=\"Your Name\"\n                      onChange={ (e) => {\n                        setName(e.target.value);\n                      }}\n                    />\n                    <input\n                      class=\"login-text\"\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      onChange={ (e) => {\n                        setEmail(e.target.value);\n                      }}\n                    />\n    \n                    <input\n                      class=\"login-text\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      onChange={ (e) => {\n                        setPassword(e.target.value);\n                      }}\n                    />\n                    <input\n                      class=\"login-text\"\n                      type=\"password\"\n                      placeholder=\"Confirm password\"\n                      onChange={(e) => {\n                        setConfirmPassword(e.target.value)\n                      }}\n                    />\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={ (e) => \n                        postDetails(e.target.files[0])\n                      }\n                    />\n                    <button class=\"login-btn\" onClick={onSignUp} isLoading={loading}>Sign Up</button>\n                  </div>\n\n                  <div className=\"back_button\" onClick={handleBack}><Typography color=\"primary.main\"> &lt; Back </Typography></div>\n                </Box>\n              </Typography>\n            </Grid>\n            <Grid xs={4}></Grid>\n          </Grid>\n        </Box>\n      </ThemeProvider>\n    );\n  }"]},"metadata":{},"sourceType":"module"}